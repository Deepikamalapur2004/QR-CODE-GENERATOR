let btn = document.querySelector(".button");
let qr_code_element = document.querySelector(".qr-code");

btn.addEventListener("click", () => {
  let user_input = document.querySelector("#input_text");
  if (user_input.value != "") {
    if (qr_code_element.childElementCount == 0) {
      generate(user_input);
    } else {
      qr_code_element.innerHTML = "";  // Clear the previous QR code
      generate(user_input);
    }
  } else {
    console.log("not valid input");
    qr_code_element.style.display = "none";
  }
});

function generate(user_input) {
  qr_code_element.style.display = "block"; // Make sure the QR code container is visible

  let qrcode = new QRCode(qr_code_element, {
    text: user_input.value,  // Use the value of the input
    width: 180,
    height: 180,
    colorDark: "#000000",
    colorLight: "#ffffff",
    correctLevel: QRCode.CorrectLevel.H
  });

  let download = document.createElement("button");
  download.textContent = "Download";  // Set button text
  qr_code_element.appendChild(download);

  let download_link = document.createElement("a");
  download_link.setAttribute("download", "qr_code.png");
  download.appendChild(download_link);

  // Get the canvas element generated by the QRCode library
  let qr_code_canvas = qr_code_element.querySelector("canvas");

  if (qr_code_canvas) {
    // Wait for the canvas to load and set the download link
    setTimeout(() => {
      download_link.setAttribute("href", qr_code_canvas.toDataURL("image/png"));
    }, 300);  // Adjust the timeout if needed
  } else {
    console.log("QR code canvas not found.");
  }
}

// Example of generating a QR code with a default value
generate({ value: "https://codepen.io/coding_dev_" });
